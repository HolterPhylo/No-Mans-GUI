<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:NoMansGUI.Utils.Converters"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
                    xmlns:templateselector="clr-namespace:NoMansGUI.Utils.TemplateSelectors"
                    xmlns:Utils="clr-namespace:NoMansGUI.Utils"
                    xmlns:Validation="clr-namespace:NoMansGUI.Utils.Validation"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:local="clr-namespace:NoMansGUI">
    <converters:DebugDataBindingConverter x:Key="DebugConverter" />
    <converters:NMSColourConverter x:Key="NMSColourConverter" />
    <converters:NMSString0x10Converter x:Key="NMSString0x10Converter"/>
    <templateselector:MBINTemplateSelector x:Key="MbinTemplateSelector"/>
    <Utils:DataContextSpy x:Key="Spy"/>
    <Utils:BindingProxy x:Key="BindingProxy"/>

    <!--<ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" DockPanel.Dock="Top">
                <Grid Width="12" Height="12">
                    <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBlock Foreground="White" FontWeight="Heavy" 
                        FontSize="8" HorizontalAlignment="Center" 
                        VerticalAlignment="Center" TextAlignment="Center"
                        ToolTip="{Binding ElementName=ErrorAdorner, 
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">X</TextBlock>
                </Grid>
                <TextBlock Foreground="Red" FontWeight="12" Margin="2,0,0,0" 
                   Text="{Binding ElementName=ErrorAdorner, 
                   Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            </StackPanel>
            <AdornedElementPlaceholder 

        x:Name="ErrorAdorner" ></AdornedElementPlaceholder>
        </DockPanel>
    </ControlTemplate>-->

    <ControlTemplate x:Key="validationTemplate">
        <DockPanel>
            <Grid DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
                <Ellipse Width="16" Height="16" Fill="Red"/>
                <Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
                <Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
            </Grid>
            <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2">
                <AdornedElementPlaceholder/>
            </Border>
        </DockPanel>
    </ControlTemplate>

    <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ListDataTemplate">
        <Expander Header="{Binding Name}" ToolTip="{Binding NMSType}" Template="{StaticResource SimpleExpanderTemp}" >
            <ListView ItemTemplateSelector="{StaticResource MbinTemplateSelector}" ItemsSource="{Binding Value}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="EnumDataTemplate">
        <ComboBox ItemsSource="{Binding EnumValues}" SelectedItem="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    </DataTemplate>

    <DataTemplate x:Key="ColourPickerDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="{Binding Name}"/>
            <!--SelectedColor="{Binding Value, Converter={StaticResource NMSColourConverter}}"-->
            <xctk:ColorPicker x:Name="ColorPicker" Grid.Column="1" ColorMode="ColorCanvas">
                <xctk:ColorPicker.Resources>
                    <Utils:DataContextSpy x:Key="spy"/>
                </xctk:ColorPicker.Resources>
                <xctk:ColorPicker.SelectedColor>
                    <Binding Path="Value" Mode="TwoWay">
                        <Binding.Converter>
                            <converters:NMSColourConverter SourceValue="{Binding Source={StaticResource spy},Path=DataContext.Value}"/>
                        </Binding.Converter>
                    </Binding>
                </xctk:ColorPicker.SelectedColor>
            </xctk:ColorPicker>
            <ItemsControl Grid.Column="2" ItemsSource="{Binding Value}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding Name}" Margin="5,0,1,0"/>
                            <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" MinWidth="50"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="VectorDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="{Binding Name}"/>
            <ItemsControl Grid.Column="2" ItemsSource="{Binding Value}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding Name}" Margin="5,0,1,0"/>
                            <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,0" MinWidth="50"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="NMSString0x10DataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding Name}" />
            <TextBox Grid.Column="2" DataContext="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{Binding Path=., Mode=TwoWay, Converter={StaticResource NMSString0x10Converter}}"/>
            <Button Grid.Column="4" Width="50" Height="25" Content="Reset" x:Name="Reset"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="StringDataTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Padding="0" Grid.Column="0" Height="25" Text="{Binding Name}"/>
            <TextBox Grid.Row="1" Padding="0" Grid.Column="0" Height="20" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--Not Yet Implemented-->
            <Button Grid.Row="1" Grid.Column="2" Width="50" Height="25" Content="Reset" x:Name="Reset"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="IntDataTemplate">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="{Binding Name}"/>
            <TextBox Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="SingleDataTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
           
            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Name}"/>
            <TextBox Grid.Row="1" Grid.Column="0" Validation.ErrorTemplate="{StaticResource validationTemplate}">
                <TextBox.Text>
                    <Binding Path="Value" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Delay="100">
                        <Binding.ValidationRules>
                            <!--https://docs.microsoft.com/en-us/dotnet/framework/wpf/data/how-to-implement-binding-validation-->
                            <Validation:TypeValidationRule TypeName="Single" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
                <i:Interaction.Behaviors>
                    <Utils:TextBoxInputBehavior InputMode="DecimalInput"/>
                </i:Interaction.Behaviors>
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <Trigger Property="Validation.HasError" Value="true">
                                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Button Grid.Row="1" Grid.Column="2" Width="50" Height="25" Content="Reset" x:Name="Reset"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BoolDataTemplate">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="{Binding Name}"/>
            <CheckBox IsChecked="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>